[{"/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/index.js":"1","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/App.js":"2","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/login/loginPage.js":"3","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/login/loginForm.js":"4","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/router.js":"5","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/gameHeader.js":"6","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/game.js":"7","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/aboutMe/aboutMe.js":"8","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/friends/friends.js":"9","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/message/messages.js":"10","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/gameLobby/gameLobby.js":"11","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/gameLobby/lobbyTables.js":"12","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/gameLobby/lobbyPlayersList.js":"13","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/play/play.js":"14","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/play/board.js":"15","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/play/playInfo.js":"16"},{"size":422,"mtime":1609913018479,"results":"17","hashOfConfig":"18"},{"size":516,"mtime":1609917170057,"results":"19","hashOfConfig":"18"},{"size":290,"mtime":1608713132726,"results":"20","hashOfConfig":"18"},{"size":2690,"mtime":1609916901608,"results":"21","hashOfConfig":"18"},{"size":407,"mtime":1609917087445,"results":"22","hashOfConfig":"18"},{"size":1806,"mtime":1608866479773,"results":"23","hashOfConfig":"18"},{"size":1140,"mtime":1608951238202,"results":"24","hashOfConfig":"18"},{"size":145,"mtime":1608874460281,"results":"25","hashOfConfig":"18"},{"size":144,"mtime":1608874476209,"results":"26","hashOfConfig":"18"},{"size":154,"mtime":1608874497357,"results":"27","hashOfConfig":"18"},{"size":836,"mtime":1609472849113,"results":"28","hashOfConfig":"18"},{"size":2185,"mtime":1609917170046,"results":"29","hashOfConfig":"18"},{"size":1366,"mtime":1608950819276,"results":"30","hashOfConfig":"18"},{"size":546,"mtime":1609917170063,"results":"31","hashOfConfig":"18"},{"size":6140,"mtime":1609320656728,"results":"32","hashOfConfig":"18"},{"size":2203,"mtime":1609917170050,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"aa5is7",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"37"},"/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/index.js",["77"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Router from \"./router\";\n\nReactDOM.render(\n    <Router/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["78","79"],"/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/App.js",["80"],"import './App.css';\nimport {Button} from 'antd'\nimport axios from \"axios\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n          <Button type='primary'>Button</Button>\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/login/loginPage.js",[],"/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/login/loginForm.js",["81","82"],"import React from 'react';\nimport {Form,Input,Button,Checkbox} from \"antd\";\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport {useHistory} from \"react-router\";\nimport axios from \"axios\";\n\nconst LoginForm = () => {\n    let history = useHistory();\n    const onFinish = (values) => {\n        axios({\n            method: 'get',\n            url: 'test',\n        }).then(function(response){\n            console.log(response);\n            history.push({\n                pathname:\"/game\",\n                state: {\n                    username: values.username,\n                }\n            });\n        })\n    }\n\n    return (\n        <div>\n            <div className={\"loginTips\"}>\n                请登录\n            </div>\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Username!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder=\"请输入用户名\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Password!',\n                        },\n                    ]}\n                >\n                    <Input.Password\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"请输入密码\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                        <Checkbox>记住我</Checkbox>\n                    </Form.Item>\n\n                    <a className=\"login-form-forgot\" href=\"\">\n                        忘记密码\n                    </a>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        登录\n                    </Button>\n                    或者 <a href=\"\">注册！</a>\n                </Form.Item>\n            </Form>\n        </div>\n    )\n}\n\nexport default LoginForm\n","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/router.js",[],"/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/gameHeader.js",[],"/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/game.js",["83","84"],"import React,{useState} from 'react';\nimport {Link, Route, Switch} from \"react-router-dom\"\nimport GameHeader from \"./gameHeader\"\nimport Lobby from \"./gameLobby/gameLobby\";\nimport Messages from \"./message/messages\";\nimport Friends from \"./friends/friends\";\nimport AboutMe from \"./aboutMe/aboutMe\";\nimport Play from \"./play/play\";\n\nrequire(\"./game.css\");\n\nconst Game= ({match}) => {\n    return(\n        <div className=\"HolyGrail\">\n            <header>\n                <GameHeader></GameHeader>\n            </header>\n            <div className={\"HolyGrail-content\"}>\n                <Switch>\n                    <Route exact path={`${match.url}`} component={Lobby}/>\n                    <Route path={`${match.url}/aboutMe`} component={AboutMe}/>\n                    <Route path={`${match.url}/message`} component={Messages}/>\n                    <Route path={`${match.url}/friends`} component={Friends}/>\n                    <Route path={`${match.url}/lobby`} component={Lobby}/>\n                    <Route path={`${match.url}/play`} component={Play}/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nexport default Game;\n","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/aboutMe/aboutMe.js",[],"/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/friends/friends.js",[],"/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/message/messages.js",[],"/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/gameLobby/gameLobby.js",[],"/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/gameLobby/lobbyTables.js",["85","86","87"],"import React,{useState} from \"react\"\nimport {Table,Tag,Space} from \"antd\"\nimport {useHistory, useLocation} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport {Button} from \"antd\";\n\nconst data = [];\nfor (let i = 0; i < 20; i++) {\n    data.push({\n        key: i,\n        tableIndex: `10 ${i}`,\n        score: `${i}`,\n        players: ['cool', 'teacher'],\n    });\n}\n\nconst LobbyTables = () => {\n    const columns = [\n        {\n            title: '桌号',\n            dataIndex: 'tableIndex',\n            key: 'tableIndex',\n            width:100,\n            render: text => <span>{text}</span>,\n        },\n        {\n            title: '分制',\n            dataIndex: 'score',\n            key: 'score',\n            width:50\n        },\n        {\n            title: '玩家',\n            key: 'players',\n            dataIndex: 'players',\n            width: 100,\n            render: players =>\n                <div>\n                    <div>{players[0] != null ? players[0] : \"---\"}</div>\n                    <div>{players[1] != null ? players[1] : \"---\"}</div>\n                </div>\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            width:100,\n            render: () => {\n                return(\n                    <Space size=\"middle\">\n                        <Button>\n                            <Link to={play}>加入对局</Link>\n                        </Button>\n                        <Button>\n                            <Link to={play2}>观战</Link>\n                        </Button>\n                    </Space>\n                )\n            }\n        },\n    ];\n    let location = useLocation();\n    let username = location.state.username;\n    const play = {\n        pathname:\"/game/play\",\n        state: {\n            purpose:1,\n            username:username\n        }\n    }\n\n    const play2 = {\n        pathname: \"/game/play\",\n        state: {\n            purpose:2,\n            username:username\n        }\n    }\n\n    return (\n        <Table\n            columns={columns}\n            dataSource={data}\n            pagination={false}\n            scroll={{y:580}}\n            size={\"middle\"}>\n        </Table>\n    )\n}\n\nexport default LobbyTables;\n\n","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/gameLobby/lobbyPlayersList.js",["88"],"import React,{useState} from \"react\"\nimport {Table,Avatar} from \"antd\"\nimport { UserOutlined } from '@ant-design/icons';\n\nconst columns = [\n    {\n        title: '玩家',\n        dataIndex: 'player',\n        key: 'player',\n        render: text =>\n            <div>\n                <Avatar size=\"small\" style={{backgroundColor:'#87d068'}} icon={<UserOutlined />}/>\n                <span>{text}</span>\n            </div>\n    },\n    {\n        title: '积分',\n        dataIndex: 'score',\n        key: 'score',\n    },\n    {\n        title: '状态',\n        key: 'state',\n        dataIndex: 'state',\n        render: state =>\n            <span>\n                {state}\n            </span>\n    },\n];\n\nconst data = [\n    {\n        key: '1',\n        player: 'maximus',\n        score: '1500',\n        state: '在线',\n    },\n    {\n        key: '2',\n        player: 'david',\n        score: '1500',\n        state: '在线',\n    },\n    {\n        key: '3',\n        player: 'dan',\n        score: '1500',\n        state: '在线',\n    },\n];\n\nconst LobbyPlayersList = () => {\n    return (\n        <Table\n            columns={columns}\n            dataSource={data}\n            pagination={false}\n            size={\"small\"}\n            showHeader={false}\n            title={() => '在线玩家'}\n            scroll={{y:600}}\n        ></Table>\n    )\n}\n\nexport default LobbyPlayersList;\n\n",["89","90"],"/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/play/play.js",["91"],"import React from \"react\"\nimport {useLocation} from \"react-router\";\nimport Board from \"./board\";\nimport {Row,Col} from \"antd\";\nimport PlayInfo from \"./playInfo\";\n\nconst Play = () => {\n    let location = useLocation();\n    let state = location.state;\n\n    return(\n        <div>\n            <Row>\n                <Col span={17}>\n                    <Board></Board>\n                </Col>\n                <Col span={7}>\n                    <PlayInfo></PlayInfo>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Play;\n","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/play/board.js",["92","93","94","95","96","97"],"import React from \"react\"\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onBoard: -1,\n            clickTurn: 1,\n            havePut: Array(625).fill(null),\n        }\n    }\n\n    componentDidMount() {\n        this.initCanvas();\n    }\n\n    initCanvas() {\n        const c = document.getElementById(\"board\");\n        const context = c.getContext(\"2d\");\n        context.strokeStyle = \"#bfbfbf\";\n\n        for(let i = 0;i < 15;i++) {\n            context.moveTo(22,22 + 44 * i);\n            context.lineTo(638,22 + 44 * i);\n            context.stroke();\n\n            context.moveTo(22 + 44 * i,22);           //竖线\n            context.lineTo(22 + 44 * i,638);\n            context.stroke();\n        }\n\n        let points = [\n            [3,3],[3,11],[11,3],[11,11],[7,7]\n        ]\n        for(let i = 0;i < 5;i++) {\n            let point = points[i];\n            context.beginPath();\n            let x = 22 + 44 * point[0];\n            let y = 22 + 44 * point[1];\n            let radius = 3;\n            let startAngle = 0;\n            let endAngle = Math.PI + (Math.PI * 2) / 2;\n            let anticlockwise = true;\n            context.arc(x,y,radius,startAngle,endAngle,anticlockwise);\n            context.fill();\n        }\n    }\n\n    moveOn(e) {\n        this.setState({onBoard:1});\n    }\n\n    moveOut(e) {\n        const havePut = this.state.havePut;\n        this.setState({onBoard: -1});\n        for(let i = 0;i < 15;i++) {\n            for(let j = 0;j < 15;j++) {\n                let x = 22 + i * 44;\n                let y = 22 + j * 44;\n                let s = x + \",\" + y;\n                if(havePut.indexOf(s) == -1) {\n                    const c = document.getElementById(\"board\");\n                    const context = c.getContext(\"2d\");\n                    this.drawIndex(context, x, y, \"white\");\n                }\n            }\n        }\n    }\n\n    drawIndex(ctx,indexX,indexY,color) {\n        ctx.beginPath();\n        ctx.moveTo(indexX - 10, indexY - 4);\n        ctx.lineTo(indexX - 4, indexY - 4);\n        ctx.lineTo(indexX - 4, indexY - 10);\n        ctx.strokeStyle = color;\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(indexX + 4, indexY - 10);\n        ctx.lineTo(indexX + 4, indexY - 4);\n        ctx.lineTo(indexX + 10, indexY - 4);\n        ctx.strokeStyle = color;\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(indexX - 10, indexY + 4);\n        ctx.lineTo(indexX - 4, indexY + 4);\n        ctx.lineTo(indexX - 4, indexY + 10);\n        ctx.strokeStyle = color;\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(indexX + 4, indexY + 10);\n        ctx.lineTo(indexX + 4, indexY + 4);\n        ctx.lineTo(indexX + 10, indexY + 4);\n        ctx.strokeStyle = color;\n        ctx.stroke();\n    }\n\n    whereToMove(e) {\n        const havePut = this.state.havePut;\n        if(this.state.onBoard == 1) {\n            const c = document.getElementById(\"board\");\n            let ctx = c.getContext(\"2d\");\n            let x = e.pageX - c.getBoundingClientRect().left;\n            let y = e.pageY - c.getBoundingClientRect().top;\n            for (let i = 0; i < 15; i++) {\n                for (let j = 0; j < 15; j++) {\n                    let indexX = 22 + 44 * i;\n                    let indexY = 22 + 44 * j;\n                    let s = indexX + \",\" + indexY;\n                    if (havePut.indexOf(s) == -1) {\n                        if (Math.abs(x - indexX) < 22 && Math.abs(y - indexY) < 22) {\n                            this.drawIndex(ctx,indexX,indexY,\"red\");\n                        } else {\n                            this.drawIndex(ctx,indexX,indexY,\"white\");\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    putOn(e) {\n        if(this.state.onBoard == 1) {\n            const havePut = this.state.havePut;\n            const c = document.getElementById(\"board\");\n            let ctx = c.getContext(\"2d\");\n            let x = e.pageX - c.getBoundingClientRect().left;\n            let y = e.pageY - c.getBoundingClientRect().top;\n            for (let i = 0; i < 15; i++) {\n                for (let j = 0; j < 15; j++) {\n                    let indexX = 22 + 44 * i;\n                    let indexY = 22 + 44 * j;\n                    let s = indexX + \",\" + indexY;\n                    if(havePut.indexOf(s) == -1) {\n                        if (Math.abs(x - indexX) < 22 && Math.abs(y - indexY) < 22) {\n                            ctx.beginPath();\n                            let radius = 22;\n                            let startAngle = 0;\n                            let endAngle = Math.PI + (Math.PI * 2) / 2;\n                            let anticlockwise = true;\n                            ctx.arc(indexX, indexY, radius, startAngle, endAngle, anticlockwise);\n                            if (this.state.clickTurn == 1) {\n                                ctx.strokeStyle = \"black\";\n                                ctx.fillStyle = \"black\";\n                            } else {\n                                ctx.strokeStyle = \"black\";\n                                ctx.fillStyle = \"white\";\n                            }\n                            this.setState({clickTurn: this.state.clickTurn * (-1)});\n                            ctx.fill();\n                            ctx.stroke();\n                            havePut.push(s);\n                            this.setState({\n                                havePut: havePut\n                            })\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <canvas id=\"board\"\n                        onMouseOver={(event) => this.moveOn(event)}\n                        onMouseOut={(event) => this.moveOut(event)}\n                        onMouseMove={(event) => this.whereToMove(event)}\n                        onClick={(event) => this.putOn(event)}\n                        width={660}\n                        height={660}></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Board;\n","/Users/maximusyoung/WebstormProjects/gomokuol/gomokufront/src/game/play/playInfo.js",["98","99","100"],"import React,{useState} from \"react\"\nimport {Card,Button,Avatar} from \"antd\";\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\n\nconst {Meta} = Card\nconst PlayInfo = () => {\n    const tabList = [\n        {\n            key:\"chat\",\n            tab:\"聊天\"\n        },\n        {\n            key:\"history\",\n            tab:\"历史\"\n        },\n        {\n            key:\"player\",\n            tab:\"玩家\"\n        }\n    ]\n    const contentList = {\n        chat:\n            <div className={\"playInfo\"}>\n            <p>聊天</p>\n            <Button className={\"playInfoButton\"} size={\"small\"} type=\"primary\">发送</Button>\n            </div>,\n        history:\n            <div className={\"playInfo\"}>\n            <p>history</p>\n            <Button className={\"playInfoButton\"} size={\"small\"} type=\"primary\">保存</Button>\n            </div>,\n        player: <textarea className={\"playInfo\"}>玩家</textarea>\n    }\n\n\n    const [infoKey,setInfoKey] = useState(\"history\");\n\n    const onTabChange = (key) => {\n        setInfoKey(key);\n    };\n\n    return(\n        <div>\n            <Card\n                style={{ width: 280 ,marginTop:\"16px\"}}\n            >\n                <Meta\n                    avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                    title=\"Card title\"\n                    description=\"This is the description\"\n                />\n                <div>积分</div>\n                <div>倒计时：</div>\n            </Card>\n            <Card\n                style={{ width: 280}}\n            >\n                <Meta\n                    avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                    title=\"Card title\"\n                    description=\"This is the description\"\n                />\n                <div>积分</div>\n                <div>倒计时：</div>\n            </Card>\n            <Card\n                style={{ width: 280 }}\n                tabList={tabList}\n                activeTabKey={infoKey}\n                onTabChange={key => {\n                    onTabChange(key);\n                }}\n            >\n                {contentList[infoKey]}\n            </Card>\n        </div>\n    )\n}\n\nexport default PlayInfo;\n",{"ruleId":"101","severity":1,"message":"102","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":11},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"101","severity":1,"message":"109","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":69,"column":21,"nodeType":"112","endLine":69,"endColumn":62},{"ruleId":"110","severity":1,"message":"111","line":78,"column":24,"nodeType":"112","endLine":78,"endColumn":35},{"ruleId":"101","severity":1,"message":"113","line":1,"column":15,"nodeType":"103","messageId":"104","endLine":1,"endColumn":23},{"ruleId":"101","severity":1,"message":"114","line":2,"column":9,"nodeType":"103","messageId":"104","endLine":2,"endColumn":13},{"ruleId":"101","severity":1,"message":"113","line":1,"column":15,"nodeType":"103","messageId":"104","endLine":1,"endColumn":23},{"ruleId":"101","severity":1,"message":"115","line":2,"column":15,"nodeType":"103","messageId":"104","endLine":2,"endColumn":18},{"ruleId":"101","severity":1,"message":"116","line":3,"column":9,"nodeType":"103","messageId":"104","endLine":3,"endColumn":19},{"ruleId":"101","severity":1,"message":"113","line":1,"column":15,"nodeType":"103","messageId":"104","endLine":1,"endColumn":23},{"ruleId":"105","replacedBy":"117"},{"ruleId":"107","replacedBy":"118"},{"ruleId":"101","severity":1,"message":"119","line":9,"column":9,"nodeType":"103","messageId":"104","endLine":9,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":61,"column":39,"nodeType":"122","messageId":"123","endLine":61,"endColumn":41},{"ruleId":"120","severity":1,"message":"121","line":102,"column":31,"nodeType":"122","messageId":"123","endLine":102,"endColumn":33},{"ruleId":"120","severity":1,"message":"121","line":112,"column":44,"nodeType":"122","messageId":"123","endLine":112,"endColumn":46},{"ruleId":"120","severity":1,"message":"121","line":125,"column":31,"nodeType":"122","messageId":"123","endLine":125,"endColumn":33},{"ruleId":"120","severity":1,"message":"121","line":136,"column":43,"nodeType":"122","messageId":"123","endLine":136,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":144,"column":54,"nodeType":"122","messageId":"123","endLine":144,"endColumn":56},{"ruleId":"101","severity":1,"message":"124","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":22},{"ruleId":"101","severity":1,"message":"125","line":3,"column":24,"nodeType":"103","messageId":"104","endLine":3,"endColumn":40},{"ruleId":"101","severity":1,"message":"126","line":3,"column":42,"nodeType":"103","messageId":"104","endLine":3,"endColumn":57},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'Link' is defined but never used.","'Tag' is defined but never used.","'useHistory' is defined but never used.",["127"],["128"],"'state' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'EditOutlined' is defined but never used.","'EllipsisOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]